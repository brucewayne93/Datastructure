#include <iostream>
#include <vector>

using namespace std;

// Function to print a matrix
void printMatrix(const vector<vector<int>>& matrix) {
    for (const vector<int>& row : matrix) {
        for (int num : row) {
            cout << num << " ";
        }
        cout << endl;
    }
}

// Function to add two matrices
vector<vector<int>> addMatrices(const vector<vector<int>>& matrix1, const vector<vector<int>>& matrix2) {
    int rows = matrix1.size();
    int cols = matrix1[0].size();
    vector<vector<int>> result(rows, vector<int>(cols));

    for (int i = 0; i < rows; i++) {
        for (int j = 0; j < cols; j++) {
            result[i][j] = matrix1[i][j] + matrix2[i][j];
        }
    }

    return result;
}

// Function to multiply two matrices
vector<vector<int>> multiplyMatrices(const vector<vector<int>>& matrix1, const vector<vector<int>>& matrix2) {
    int rows1 = matrix1.size();
    int cols1 = matrix1[0].size();
    int cols2 = matrix2[0].size();
    vector<vector<int>> result(rows1, vector<int>(cols2));

    for (int i = 0; i < rows1; i++) {
        for (int j = 0; j < cols2; j++) {
            for (int k = 0; k < cols1; k++) {
                result[i][j] += matrix1[i][k] * matrix2[k][j];
            }
        }
    }

    return result;
}

// Function to transpose a matrix
vector<vector<int>> transposeMatrix(const vector<vector<int>>& matrix) {
    int rows = matrix.size();
    int cols = matrix[0].size();
    vector<vector<int>> result(cols, vector<int>(rows));

    for (int i = 0; i < rows; i++) {
        for (int j = 0; j < cols; j++) {
            result[j][i] = matrix[i][j];
        }
    }

    return result;
}

int main() {
    int choice;
    do {
        cout << "Matrix Operations Menu:" << endl;
        cout << "1. Matrix Addition" << endl;
        cout << "2. Matrix Multiplication" << endl;
        cout << "3. Matrix Transpose" << endl;
        cout << "4. Exit" << endl;
        cout << "Enter your choice: ";
        cin >> choice;

        if (choice == 1) {
            int rows, cols;
            cout << "Enter the number of rows and columns for the matrices: ";
            cin >> rows >> cols;

            vector<vector<int>> matrix1(rows, vector<int>(cols));
            vector<vector<int>> matrix2(rows, vector<int>(cols));

            cout << "Enter elements of the first matrix:" << endl;
            for (int i = 0; i < rows; i++) {
                for (int j = 0; j < cols; j++) {
                    cin >> matrix1[i][j];
                }
            }

            cout << "Enter elements of the second matrix:" << endl;
            for (int i = 0; i < rows; i++) {
                for (int j = 0; j < cols; j++) {
                    cin >> matrix2[i][j];
                }
            }

            vector<vector<int>> result = addMatrices(matrix1, matrix2);
            cout << "Resultant Matrix (Addition):" << endl;
            printMatrix(result);
        } else if (choice == 2) {
            int rows1, cols1, rows2, cols2;
            cout << "Enter the number of rows and columns for the first matrix: ";
            cin >> rows1 >> cols1;
            cout << "Enter the number of rows and columns for the second matrix: ";
            cin >> rows2 >> cols2;

            if (cols1 != rows2) {
                cout << "Matrix multiplication is not possible. Columns of the first matrix must be equal to rows of the second matrix." << endl;
            } else {
                vector<vector<int>> matrix1(rows1, vector<int>(cols1));
                vector<vector<int>> matrix2(rows2, vector<int>(cols2));

                cout << "Enter elements of the first matrix:" << endl;
                for (int i = 0; i < rows1; i++) {
                    for (int j = 0; j < cols1; j++) {
                        cin >> matrix1[i][j];
                    }
                }

                cout << "Enter elements of the second matrix:" << endl;
                for (int i = 0; i < rows2; i++) {
                    for (int j = 0; j < cols2; j++) {
                        cin >> matrix2[i][j];
                    }
                }

                vector<vector<int>> result = multiplyMatrices(matrix1, matrix2);
                cout << "Resultant Matrix (Multiplication):" << endl;
                printMatrix(result);
            }
        } else if (choice == 3) {
            int rows, cols;
            cout << "Enter the number of rows and columns for the matrix: ";
            cin >> rows >> cols;

            vector<vector<int>> matrix(rows, vector<int>(cols));

            cout << "Enter elements of the matrix:" << endl;
            for (int i = 0; i < rows; i++) {
                for (int j = 0; j < cols; j++) {
                    cin >> matrix[i][j];
                }
            }

            vector<vector<int>> result = transposeMatrix(matrix);
            cout << "Resultant Matrix (Transpose):" << endl;
            printMatrix(result);
        } else if (choice == 4) {
            cout << "Exiting the program. Goodbye!" << endl;
        } else {
            cout << "Invalid choice. Please try again." << endl;
        }
    } while (choice != 4);

    return 0;
}
